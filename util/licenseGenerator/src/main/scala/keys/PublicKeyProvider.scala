package keys

import net.nicholaswilliams.java.licensing.encryption.PublicKeyDataProvider

object PublicKeyProvider extends PublicKeyDataProvider {
  override val getEncryptedPublicKeyData = Array(
    0x0000007C, 0xFFFFFF95, 0xFFFFFFF6, 0xFFFFFFD3, 0x0000005D, 0x00000017, 0x00000042, 0x00000049,
    0xFFFFFF94, 0x00000045, 0xFFFFFFF4, 0x0000001B, 0x00000000, 0x00000076, 0xFFFFFFDD, 0x0000006B,
    0xFFFFFFC3, 0xFFFFFFB6, 0x00000031, 0x00000023, 0x0000007B, 0xFFFFFF93, 0x00000008, 0xFFFFFF92,
    0xFFFFFF88, 0x0000005E, 0x0000003A, 0x00000066, 0xFFFFFF8A, 0xFFFFFFC2, 0xFFFFFFE7, 0x00000071,
    0x00000071, 0x00000076, 0xFFFFFFEA, 0xFFFFFFB5, 0xFFFFFFF8, 0x0000002F, 0x0000002E, 0xFFFFFF8D,
    0x00000065, 0xFFFFFFFA, 0x00000036, 0x00000012, 0xFFFFFFF1, 0xFFFFFF98, 0xFFFFFF8A, 0x00000071,
    0xFFFFFFE7, 0x00000001, 0x00000052, 0x0000006F, 0x00000057, 0xFFFFFF8A, 0xFFFFFFAD, 0x00000047,
    0xFFFFFFCF, 0xFFFFFFA4, 0x00000035, 0x00000034, 0x00000016, 0x00000074, 0xFFFFFFBA, 0x0000005D,
    0x00000026, 0xFFFFFFE9, 0xFFFFFFAC, 0xFFFFFF96, 0x0000000C, 0xFFFFFFB9, 0xFFFFFFDC, 0x00000071,
    0xFFFFFF95, 0x00000054, 0xFFFFFFA2, 0x00000045, 0xFFFFFFA9, 0xFFFFFF95, 0xFFFFFF9F, 0x00000052,
    0x00000002, 0x0000000C, 0x0000003C, 0x0000003A, 0x00000035, 0x0000003C, 0xFFFFFFE2, 0x00000026,
    0xFFFFFFE6, 0xFFFFFF8A, 0x00000024, 0x00000068, 0x00000030, 0x0000006E, 0xFFFFFFD5, 0xFFFFFFAC,
    0x00000017, 0x0000004C, 0x0000006B, 0x00000021, 0xFFFFFFF5, 0x0000000D, 0x0000003F, 0x00000056,
    0x0000001F, 0x00000027, 0x00000008, 0x00000056, 0x0000007B, 0xFFFFFFA5, 0x0000007A, 0x00000058,
    0x00000005, 0x00000075, 0xFFFFFFE7, 0xFFFFFFBC, 0xFFFFFF90, 0xFFFFFF88, 0xFFFFFFFB, 0x0000002F,
    0xFFFFFFDD, 0x00000063, 0x0000006E, 0xFFFFFFD6, 0xFFFFFFB5, 0x00000020, 0x0000004C, 0x00000043,
    0x0000002F, 0xFFFFFFCB, 0x00000016, 0xFFFFFFF5, 0x0000004E, 0x00000072, 0x00000047, 0x0000007A,
    0xFFFFFFC8, 0x00000037, 0x0000002B, 0x00000029, 0x0000001D, 0x00000070, 0x0000001D, 0xFFFFFFF4,
    0x0000001D, 0xFFFFFFB5, 0xFFFFFFD1, 0x0000001F, 0x0000000E, 0xFFFFFFFB, 0x0000003C, 0x00000051,
    0xFFFFFFF1, 0x00000057, 0x0000007F, 0xFFFFFFF5, 0x00000042, 0xFFFFFFC5, 0x00000073, 0xFFFFFFB3,
    0x00000064, 0x00000072, 0x0000002E, 0xFFFFFFFD, 0x0000006C, 0x00000031, 0x0000005A, 0x00000001,
    0xFFFFFFE9, 0x0000000B, 0xFFFFFFD7, 0xFFFFFF8A, 0xFFFFFFA7, 0x0000004D, 0xFFFFFFB0, 0xFFFFFFC5,
    0x00000062, 0x0000002E, 0x00000031, 0x0000002D, 0x00000059, 0x0000007C, 0x0000003A, 0xFFFFFFBC,
    0xFFFFFFA1, 0xFFFFFFA6, 0xFFFFFFA0, 0x0000003A, 0xFFFFFF83, 0xFFFFFF8B, 0xFFFFFFD6, 0x0000006D,
    0xFFFFFFAE, 0x0000005A, 0x00000075, 0xFFFFFFAB, 0x00000057, 0xFFFFFFF1, 0xFFFFFFB7, 0xFFFFFFD0,
    0xFFFFFF88, 0x00000064, 0x00000023, 0x00000066, 0xFFFFFF9A, 0x0000003C, 0x0000003F, 0xFFFFFFEA,
    0xFFFFFF99, 0x0000003E, 0xFFFFFFEE, 0x0000001D, 0x00000002, 0xFFFFFF94, 0xFFFFFFC8, 0x00000035,
    0xFFFFFF82, 0xFFFFFFD0, 0xFFFFFFAC, 0xFFFFFF8A, 0xFFFFFFC0, 0xFFFFFF8A, 0x0000005B, 0x00000079,
    0xFFFFFF90, 0x00000079, 0x00000031, 0x00000055, 0x0000003F, 0xFFFFFF94, 0x0000002B, 0x00000078,
    0x00000012, 0xFFFFFFD3, 0xFFFFFFD7, 0xFFFFFF8E, 0xFFFFFFDD, 0xFFFFFF84, 0xFFFFFFB3, 0x0000003E,
    0x0000006B, 0x00000044, 0xFFFFFFE0, 0xFFFFFF86, 0xFFFFFFEF, 0x00000042, 0x0000002F, 0xFFFFFFD5,
    0x00000010, 0x00000061, 0x0000006E, 0x00000041, 0xFFFFFFF8, 0x00000072, 0xFFFFFFBC, 0x00000029,
    0xFFFFFFDA, 0x00000073, 0xFFFFFF80, 0xFFFFFFD8, 0xFFFFFF84, 0x00000033, 0x0000005D, 0x00000057,
    0xFFFFFFE8, 0xFFFFFF8C, 0x0000005B, 0x0000007E, 0xFFFFFF82, 0x00000052, 0x00000060, 0xFFFFFFB7,
    0xFFFFFFD8, 0x00000040, 0xFFFFFFA7, 0xFFFFFF92, 0x0000001E, 0x00000064, 0x0000004F, 0x0000007E,
    0xFFFFFFF7, 0xFFFFFFE4, 0xFFFFFF86, 0xFFFFFF97, 0xFFFFFFC4, 0xFFFFFFF3, 0x00000066, 0x00000053,
    0x0000004B, 0x0000003A, 0xFFFFFFBB, 0xFFFFFF8D, 0x0000004D, 0xFFFFFFB2, 0x0000002F, 0xFFFFFFF6,
    0xFFFFFFA9, 0xFFFFFFC0, 0x0000000A, 0x0000006F, 0xFFFFFFD3, 0xFFFFFFC8, 0x00000041, 0xFFFFFFC1
  ).map(_.toByte)
}
