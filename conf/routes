GET         /                                        controllers.HomeController.home
GET         /ping                                    controllers.HomeController.ping(timestamp: Long)
GET         /robots.txt                              controllers.HomeController.robots

GET         /strings.js                              controllers.MessagesController.strings()

# Connection Management
GET         /c/new                                   controllers.connection.ConnectionSettingsController.addNew()
GET         /c/sample                                controllers.connection.ConnectionSettingsController.createSample()
POST        /c/:id                                   controllers.connection.ConnectionSettingsController.save(id: java.util.UUID)
GET         /c/:id                                   controllers.connection.ConnectionSettingsController.editForm(id: java.util.UUID)
GET         /c/:id/delete                            controllers.connection.ConnectionSettingsController.delete(id: java.util.UUID)
GET         /c/:id/cp                                controllers.connection.ConnectionSettingsController.copyConnection(id: java.util.UUID)
POST        /c/:id/test                              controllers.connection.ConnectionTestController.test(id: java.util.UUID)

# Query Interface
GET         /q/:conn                                 controllers.query.QueryController.main(conn)
GET         /q/:conn/websocket                       controllers.query.QueryController.connect(conn: java.util.UUID)
POST        /q/:conn/export                          controllers.query.ExportController.exportQuery(conn: java.util.UUID)

# Shared Result
GET         /shared                                  controllers.query.SharedResultController.index()
POST        /shared                                  controllers.query.SharedResultController.save()
GET         /shared/:id                              controllers.query.SharedResultController.view(id: java.util.UUID)
GET         /shared/:id/remove                       controllers.query.SharedResultController.remove(id: java.util.UUID)
GET         /shared/:id/export/:fmt                  controllers.query.ExportController.exportShared(id: java.util.UUID, fmt)

# GraphQL
GET         /schema/:conn                            controllers.graphql.GraphQLController.renderSchema(conn)
GET         /graphql/:conn                           controllers.graphql.GraphQLController.graphql(conn, id: Option[java.util.UUID] ?= None)
GET         /graphql/:conn/query                     controllers.graphql.GraphQLController.graphqlQuery(conn, q)
POST        /graphql/:conn                           controllers.graphql.GraphQLController.graphqlBody(conn: java.util.UUID)
GET         /graphql/:conn/load                      controllers.graphql.GraphQLQueryController.load(conn, id: java.util.UUID)
POST        /graphql/:conn/save                      controllers.graphql.GraphQLQueryController.save(conn: java.util.UUID)

# Admin
->          /admin                                   admin.Routes

# Utility
GET         /*path/                                  controllers.HomeController.untrail(path: String)

# Authentication
GET         /signup                                  controllers.auth.RegistrationController.registrationForm(email: Option[String] ?= None)
POST        /signup                                  controllers.auth.RegistrationController.register
GET         /signin                                  controllers.auth.AuthenticationController.signInForm
POST        /signin                                  controllers.auth.AuthenticationController.authenticateCredentials
GET         /signout                                 controllers.auth.AuthenticationController.signOut

# Activity
GET         /activity                                controllers.user.UserActivityController.activity(limit: Int ?= 100, offset: Int ?= 0)
GET         /activity/all/remove                     controllers.user.UserActivityController.removeAllAudits()
GET         /activity/:id/remove                     controllers.user.UserActivityController.removeAudit(id: java.util.UUID)

# Profile
GET         /profile                                 controllers.user.ProfileController.view
POST        /profile                                 controllers.user.ProfileController.save
GET         /password/change                         controllers.user.ProfileController.changePasswordForm
POST        /password/change                         controllers.user.ProfileController.changePassword

# Assets
GET         /browserconfig.xml                       controllers.Assets.at(path = "/public", file = "browserconfig.xml")
GET         /manifest.json                           controllers.Assets.at(path = "/public", file = "manifest.json")

GET         /android-chrome-192x192.png              controllers.Assets.at(path = "/public", file = "images/ui/favicon/android-chrome-192x192.png")
GET         /android-chrome-512x512.png              controllers.Assets.at(path = "/public", file = "images/ui/favicon/android-chrome-512x512.png")
GET         /apple-touch-icon-precomposed.png        controllers.Assets.at(path = "/public", file = "images/ui/favicon/apple-touch-icon-precomposed.png")
GET         /apple-touch-icon.png                    controllers.Assets.at(path = "/public", file = "images/ui/favicon/apple-touch-icon.png")
GET         /favicon-16x16.png                       controllers.Assets.at(path = "/public", file = "images/ui/favicon/favicon-16x16.png")
GET         /favicon-32x32.png                       controllers.Assets.at(path = "/public", file = "images/ui/favicon/favicon-32x32.png")
GET         /favicon.ico                             controllers.Assets.at(path = "/public", file = "images/ui/favicon/favicon.ico")
GET         /icon-blue-grey@2x.png                   controllers.Assets.at(path = "/public", file = "images/ui/favicon/icon-blue-grey@2x.png")
GET         /mstile-144x144.png                      controllers.Assets.at(path = "/public", file = "images/ui/favicon/mstile-144x144.png")
GET         /mstile-150x150.png                      controllers.Assets.at(path = "/public", file = "images/ui/favicon/mstile-150x150.png")
GET         /mstile-310x150.png                      controllers.Assets.at(path = "/public", file = "images/ui/favicon/mstile-310x150.png")
GET         /mstile-310x310.png                      controllers.Assets.at(path = "/public", file = "images/ui/favicon/mstile-310x310.png")
GET         /mstile-70x70.png                        controllers.Assets.at(path = "/public", file = "images/ui/favicon/mstile-70x70.png")
GET         /safari-pinned-tab.svg                   controllers.Assets.at(path = "/public", file = "images/ui/favicon/safari-pinned-tab.svg")

GET         /assets/*file                            controllers.Assets.versioned(path="/public", file: Asset)
