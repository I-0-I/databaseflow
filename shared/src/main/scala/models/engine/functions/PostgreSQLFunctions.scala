/* Generated Code */
// scalastyle:off
package models.engine.functions

object PostgreSQLFunctions extends FunctionProvider {
  override val functions = Seq(
    "abs",
    "acos",
    "age",
    "ascii",
    "asin",
    "atan",
    "avg",
    "bit_length",
    "cast",
    "cbrt",
    "ceil",
    "char_length",
    "chr",
    "coalesce",
    "concat",
    "cos",
    "cot",
    "count",
    "current_database",
    "current_date",
    "current_schema",
    "current_time",
    "current_timestamp",
    "current_user",
    "date_trunc",
    "day",
    "degrees",
    "exp",
    "extract",
    "floor",
    "hour",
    "initcap",
    "length",
    "ln",
    "localtime",
    "localtimestamp",
    "locate",
    "log",
    "lower",
    "make_date",
    "make_interval",
    "make_time",
    "make_timestamp",
    "make_timestamptz",
    "max",
    "md5",
    "min",
    "minute",
    "mod",
    "month",
    "now",
    "nullif",
    "octet_length",
    "quote_ident",
    "quote_literal",
    "radians",
    "rand",
    "random",
    "round",
    "second",
    "session_user",
    "sign",
    "sin",
    "sqrt",
    "stddev",
    "str",
    "substr",
    "substring",
    "sum",
    "tan",
    "timeofday",
    "to_ascii",
    "to_char",
    "to_date",
    "to_number",
    "to_timestamp",
    "trim",
    "trunc",
    "upper",
    "user",
    "variance",
    "year"
  )
}
// scalastyle:on
