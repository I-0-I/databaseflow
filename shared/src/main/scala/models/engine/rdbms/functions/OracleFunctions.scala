/* Generated Code */
// scalastyle:off
package models.engine.rdbms.functions

import models.engine.DatabaseEngine

trait OracleFunctions extends DatabaseEngine {
  override val builtInFunctions = Seq(
    "abs",
    "acos",
    "add_months",
    "ascii",
    "asin",
    "atan",
    "atan2",
    "avg",
    "bit_length",
    "bitand",
    "cast",
    "ceil",
    "chr",
    "coalesce",
    "concat",
    "cos",
    "cosh",
    "count",
    "current_date",
    "current_time",
    "current_timestamp",
    "day",
    "exp",
    "extract",
    "floor",
    "hour",
    "initcap",
    "instr",
    "instrb",
    "last_day",
    "length",
    "ln",
    "locate",
    "log",
    "lower",
    "lpad",
    "ltrim",
    "max",
    "min",
    "minute",
    "mod",
    "month",
    "months_between",
    "next_day",
    "nullif",
    "nvl",
    "nvl2",
    "power",
    "replace",
    "round",
    "rowid",
    "rownum",
    "rpad",
    "rtrim",
    "second",
    "sign",
    "sin",
    "sinh",
    "soundex",
    "sqrt",
    "stddev",
    "str",
    "substr",
    "substrb",
    "substring",
    "sum",
    "sysdate",
    "systimestamp",
    "tan",
    "tanh",
    "to_char",
    "to_date",
    "translate",
    "trim",
    "trunc",
    "uid",
    "upper",
    "user",
    "variance",
    "year"
  )
}
// scalastyle:on
