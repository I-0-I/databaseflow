/* Generated Code */
// scalastyle:off
package models.engine.rdbms

import models.engine.DatabaseEngine

object Oracle extends DatabaseEngine(
  id = "oracle",
  name = "Oracle",
  driverClass = "oracle.jdbc.driver.OracleDriver",
  exampleUrl = "jdbc:oracle:thin:@//hostname:1521/XE",

  builtInFunctions = Seq(
    "abs",
    "acos",
    "add_months",
    "ascii",
    "asin",
    "atan",
    "atan2",
    "avg",
    "bit_length",
    "bitand",
    "cast",
    "ceil",
    "chr",
    "coalesce",
    "concat",
    "cos",
    "cosh",
    "count",
    "current_date",
    "current_time",
    "current_timestamp",
    "day",
    "exp",
    "extract",
    "floor",
    "hour",
    "initcap",
    "instr",
    "instrb",
    "last_day",
    "length",
    "ln",
    "locate",
    "log",
    "lower",
    "lpad",
    "ltrim",
    "max",
    "min",
    "minute",
    "mod",
    "month",
    "months_between",
    "next_day",
    "nullif",
    "nvl",
    "nvl2",
    "power",
    "replace",
    "round",
    "rowid",
    "rownum",
    "rpad",
    "rtrim",
    "second",
    "sign",
    "sin",
    "sinh",
    "soundex",
    "sqrt",
    "stddev",
    "str",
    "substr",
    "substrb",
    "substring",
    "sum",
    "sysdate",
    "systimestamp",
    "tan",
    "tanh",
    "to_char",
    "to_date",
    "translate",
    "trim",
    "trunc",
    "uid",
    "upper",
    "user",
    "variance",
    "year"
  ),

  columnTypes = Seq(
    "number",
    "long raw",
    "number",
    "blob",
    "number",
    "char",
    "clob",
    "date",
    "number",
    "double precision",
    "float",
    "number",
    "nvarchar2",
    "long raw",
    "long",
    "nchar",
    "nclob",
    "number",
    "nvarchar2",
    "real",
    "number",
    "date",
    "timestamp",
    "number",
    "long raw",
    "long"
  )
) {
  override val leftQuoteIdentifier = "\""
  override val rightQuoteIdentifier = "\""
  override val explain = Some((sql: String) => { "explain plan for  " + sql })
}
// scalastyle:on
